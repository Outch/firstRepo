SELECT * FROM commandes_details
JOIN produits
ON produits.id = commandes_details.product_id


SELECT * FROM commandes_details
JOIN produits
ON produits.id = commandes_details.product_id
JOIN commandes
ON commandes.id = commandes_details.commandes_id

SELECT * FROM commandes_details
JOIN produits
ON produits.id = commandes_details.product_id
JOIN commandes
ON commandes.id = commandes_details.commandes_id
JOIN user
ON user.id = commandes.user_id


	sql.sh > ORDER BY

1) Afficher/Récupérer la liste des bureaux (adresse et ville) triés par pays décroissant puis par état

----------
SELECT country, state, city, addressLine1 FROM offices
ORDER BY country DESC, state
-----------


2) La liste des avions (code et nom) triés par vendeur et par quantité en stock décroissants

----------
SELECT productCode, productName FROM products
WHERE productline = 'planes'
ORDER BY productVendor, quantityInStock
----------


3) La liste des produits (code, nom, échelle et quantité) qui ont une échelle soit de 1:10, soit de 1:18 triés par quantité en stock décroissante

-----------
SELECT productName, productCode, productScale, quantityInStock FROM products
WHERE productScale = '1:10' OR productScale = '1:18'
ORDER BY quantityInStock DESC
-----------


4) La liste des produits (nom, vendeur et prix de vente) qui sont vendus au moins 132$ triés par nom du produit

------------
SELECT productName, productVendor, MSRP FROM products
WHERE MSRP >= '132'
ORDER BY productName
------------


5) La liste des produits (code, nom et prix d'achat) des produits achetés au moins 60$ au plus 90$ triés par prix d'achat
	sql.sh > BETWEEN

--------
SELECT productCode, productName, buyPrice FROM products
WHERE buyPrie BETWEEN '60' AND '90'
ORDER BY buyPrice
--------



6) La liste des motos (nom, vendeur, quantité et marge) triés par marge décroissante

----------
SELECT productName, productVendor, quantityInStock, (MSRP - buyPrice) as marge FROM products
WHERE productline = 'motorcycles'
ORDER BY marge DESC
----------



7) La liste des commandes (numéro, date de commande, date d'expédition, écart en jours entre les deux dates et statut) qui sont en cours de traitement ou qui ont été expédiées et ont un écart de plus de 10j triés par écart décroissant puis par date de commande
	
    sql.sh > OR et AND

---------
SELECT orderNumber, orderDate, shippedDate, DATEDIFF(shippedDate, orderDate) as difference, status FROM orders
WHERE (status = 'shipped' OR status = 'In Process') AND DATEDIFF(shippedDate, orderDate) > 10
---------
 

    
8) La liste des produits (nom et valeur du stock à la vente) des années 1960

----------
SELECT productName, (MSRP*quantityInStock) as stockValue FROM products
WHERE productName > '1960' AND productName < '1970'
----------



9) Le prix moyen d'un produit vendu par chaque vendeur triés par prix moyen décroissant
	sql.sh GROUP BY

----------
SELECT productLine, productVendor, AVG(MSRP) as averagePrice FROM products
GROUP BY productLine, productVendor
ORDER BY averagePrice
----------


    
10) Le nombre de produits pour chaque ligne de produit

----------
SELECT productLine, COUNT(productName) FROM products
GROUP BY productLine
----------

11) Le total du stock et le total de la valeur du stock à la vente de chaque ligne de produit pour les produits vendus plus de 100$ trié par total de la valeur du stock à la vente

-----------
SELECT productLine, SUM(quantityInStock) FROM products
WHERE MSRP > '100'
GROUP BY productLine
-----------



12) La quantité du produit le plus en stock de chaque vendeur trié par vendeur

-----------
SELECT productVendor, MAX(quantityInStock) FROM products
GROUP BY productVendor
ORDER BY productVendor

SET GLOBAL sql_mode='ONLY_FULL_GROUP_BY'
SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));

SELECT productVendor, productLine, MAX(quantityInStock) FROM products
GROUP BY productVendor
ORDER BY productVendor


Autoart Studio Design 		Classic Cars 				9354
Carousel DieCast Legends 	Trucks and Buses 			8197
Classic Metal Creations 	Classic Cars 				9042
Exoto Designs 				Trucks and Buses 			8290
Gearbox Collectibles 		Classic Cars 				9446
Highway 66 Mini				Classics 	Motorcycles 	7733
Min Lin Diecast 			Motorcycles 				9772
Motor City Art Classics 	Classic Cars 				9653
Red Start Diecast 			Motorcycles 				8164
Second Gear Diecast 		Classic Cars 				8820
Studio M Art Models 		Classic Cars 				8635
Unimax Art Galleries 		Motorcycles 				9997
Welly Diecast Productions 	Trucks and Buses 			9123

Hey, pour ceux qui veulent plus de liberté sur l'utilisation du GROUP BY

-----------



13) Le prix de l'avion qui coûte le moins cher à l'achat

-----------
SELECT MIN(buyPrice) FROM products
WHERE productLine = 'planes'
-----------



14) Le crédit des clients qui ont payé plus de 20000$ durant l'année 2004 trié par crédit décroissant

-----------
SELECT customerNumber, SUM(creditLimit) FROM customers
WHERE creditLimit >= 20000
GROUP BY customerNumber
ORDER BY creditLimit DESC






SELECT customerNumber, SUM(amount) AS totalCredit
FROM payments
WHERE (paymentDate BETWEEN '2004-01-01' AND '2004-13-31') AND totalCredit > 20000
GROUP BY customerNumber
HAVING totalCredit > 20000
-----------



15)  La liste des employés (nom, prénom et fonction) et des bureaux (adresse et ville) dans lequel ils travaillent

-----------
SELECT lastName, firstName, jobTitle, addressLine1, city FROM employees
JOIN offices
ON employees.officeCode = offices.officeCode
-----------



16) La liste des clients français ou américains (nom du client, nom, prénom du contact et pays) et de leur commercial dédié (nom et prénom) triés par nom et prénom du contact

-----------
SELECT customerName, contactLastName, contactFirstName, country, lastName, firstName
FROM customers
JOIN employees ON employees.employeeNumber = customers.salesRepEmployeeNumber
WHERE country IN ('France', 'USA')
ORDER BY contactLastName, contactFirstName
-----------



17) La liste des lignes de commande (numéro de commande, code, nom et ligne de produit) et la remise appliquée aux voitures ou motos commandées triées par numéro de commande puis par remise décroissante

------------
SELECT orderNumber, orderdetails.productCode, productName, productLine, (MSRP - priceEach) AS discount
FROM orderdetails
JOIN products ON products.productCode = orderdetails.productCode
WHERE productLine IN ('Classic Cars', 'Vintage Cars', 'Motorcycles')
ORDER BY orderNumber, discount DESC
------------


18) Le total des paiements effectués de chaque client (numéro, nom et pays) américain, allemand ou français de plus de 50000$ trié par pays puis par total des paiements décroissant
	sql.sh > HAVING
    
-------------
SELECT customers.customerNumber, customerName, country, SUM(amount) AS totalPayment
FROM customers
JOIN payments ON payments.customerNumber = customers.customerNumber
WHERE country IN ('France', 'Germany', 'USA')
GROUP BY customers.customerNumber, customerName, country
HAVING totalPayment > 50000
ORDER BY country, totalPayment DESC
-------------
    
19) Le montant total de chaque commande (numéro et date) des clients New-Yorkais (nom) trié par nom du client puis par date de commande

-------------
SELECT customerName, orders.orderNumber, orderDate, SUM(quantityOrdered * priceEach) AS totalAmount
FROM customers
JOIN orders ON orders.customerNumber = customers.customerNumber
JOIN orderdetails ON orders.orderNumber = orderdetails.orderNumber
WHERE city = 'NYC'
GROUP BY city, customerName, orderNumber, orderDate
ORDER BY customerName, orderDate
-------------